/*Copyright (C) 2019-2022 The Xanado Project https://github.com/cdot/Xanado
License MIT. See README.md at the root of this distribution for full copyright
and license information*/
/* eslint-env node, mocha */

if (typeof requirejs === 'undefined') {
    requirejs = require('requirejs');
    // node.js
}

requirejs.config({
    baseUrl: `${__dirname}/..`,
    paths: {
        'common': 'js/common',
		platform: "js/server/ServerPlatform"
    }
});

describe("Utils class", () => {

	const deps = [
		{ Utils: "common/Utils" }
	];

	const Assert = require("./Assert.js");
	before(required => Assert.depend(required, deps));

    it("genKey", () => {
		const miss = [ Utils.genKey() ];
		for (let i = 1; i < 1000; i++)
			miss.push(Utils.genKey(miss));
		assert.equal(miss.length, 1000);
	});

	it("formatTimeInterval", () => {
		assert.equal(Utils.formatTimeInterval(0), "00:00");
		assert.equal(Utils.formatTimeInterval(1 * 60 + 1), "01:01");
		assert.equal(Utils.formatTimeInterval(10 * 60 + 1), "10:01");
		assert.equal(Utils.formatTimeInterval(60 * 60 + 1), "01:00:01");
		assert.equal(Utils.formatTimeInterval(24 * 60 * 60 + 1), "1:00:00:01");
		assert.equal(Utils.formatTimeInterval(2 * 24 * 60 * 60 + 1), "2:00:00:01");
		assert.equal(Utils.formatTimeInterval(365 * 24 * 60 * 60 + 1), "365:00:00:01");
		assert.equal(Utils.formatTimeInterval(-(60 * 60 + 1)), "-01:00:01");
	});

	it("andList", () => {
		assert.equal(Utils.andList(["A"]), "A");
		assert.equal(Utils.andList(["A", "B"]), "A and B");
		assert.equal(Utils.andList(["A", "B", "C"]), "A, B and C");
	});
});
