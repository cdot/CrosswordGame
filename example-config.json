// Rename this file as 'config.json' and remove ALL // comments
{
  // The port on the server to use. The default 9093 may be used by several
  // other applications, see: https://www.speedguide.net/port.php?port=9093
  "port": 9093,

  "baseUrl": "http://localhost:9093/",

  // Optional mail configuration.
  // Not required unless you are mailing out invitations.
  "mail": {
    "sender": "XANADO <xanado@example.com>",
	// You can also set "transport" to the string "mailgun" to use
	// a mailgun configuration. https://www.mailgun.com/
	"transport": {
	  // This structure is passed directly to the nodemailer
	  // createTransport function. Refer to the 'nodemailer'
	  // documentation at https://nodemailer.com/about/
	  "host": "localhost"
	}
  },

  // Defaults to apply to new games and the UI for new users.
  "defaults": {
	// The default edition when creating new games. Game editions can
	// be found in the 'editions' directory.
	"edition": "English_Scrabble",
	// The default dictionary when creating new games. Note that the
	// robot player requires a dictionary. Dictionaries can be found
	// in the 'dictionaries' directory.
	"dictionary": "CSW2019_English",
	// Whether to generate notifications in the UI. Requires HTTPS.
	"notification": true,
	// User interface theme, must be the name of a subdiurectory of css
	"theme": "default",
	// Whether to generate warning sounds
	"warnings": true,
	// Whether to generate end of game cheers / groans
	"cheers": true,
	// Whether to make a click when a tile is placed
	"tile_click": true,
	// Whether to bong when it's your turn
	"turn_alert": true,
    // Enable/disable undo/redo for debugging
    "undo_redo": false
  },

  // Access control
  "auth": {
	// Probably best to leave this as-is
	"sessionSecret": "cross words",
	// Path to file used to store usernames and passwords (in plain text!)
	"db_file" : "passwd.json",
	// Configurations for oauth2 providers. You have to have registered the
	// application and obtained client id's and secrets from the provider's webiste
	"oauth2": {
	  // These configurations are passed directly to the Passport Strategy for the
	  // named provider e.g. passport-google, passport-facebook
	  "google": {
		"logo": "https://lh3.googleusercontent.com/COxitqgJr1sJnIDe8-jiKhxDx1FrYbtRHKJ9z_hELisAlapwE9LUPh6fcXIfb5vwpbMl4xl9H9TRFPc5NOO8Sb3VSgIBrfRYvW6cUA",
		"module": "passport-google-oauth20",
		"clientID":"YOUR CLIENT ID",
		"clientSecret":"YOUR SECRET",
		"scope": [ "profile", "email" ],
		// Google requires a fully qualified URL, by their policies
		"callbackURL": "protocol://YOUR.SERVER/oauth2/callback/google"
	  },
	  "facebook": {
		"logo": "https://upload.wikimedia.org/wikipedia/commons/5/51/Facebook_f_logo_%282019%29.svg",
		"clientID":"YOUR CLIENT ID",
		"clientSecret": "YOUR CLIENT SECRET",
		"profileFields": ["id", "displayName", "email"],
		// Facebook requires a relative URL. Put an absolute URL in and you
		// will get a blank page and facebook will never redirect
		"callbackURL": "/oauth2/callback/facebook"
	  }
	},

	// Optional HTTPS configuration. HTTPS is required for notifications
	// to work in the browser and is important for protecting passwords. See
	// https://linuxize.com/post/creating-a-self-signed-ssl-certificate/
	// for how to create a self-signed certificate. On linux:
	// openssl req -newkey rsa:4096 -x509 -sha256 -days 3650 -nodes -out https.crt -keyout https.key
	"https": {
	  cert: "https.cert",
	  key: "https.key"
	}
  }
}
