/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(window["webpackChunk_cdot_xanado"] = window["webpackChunk_cdot_xanado"] || []).push([["findBestPlayController"],{

/***/ "./node_modules/web-worker/cjs/browser.js":
/*!************************************************!*\
  !*** ./node_modules/web-worker/cjs/browser.js ***!
  \************************************************/
/***/ ((module) => {

eval("/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nmodule.exports = Worker;\n\n//# sourceURL=webpack://@cdot/xanado/./node_modules/web-worker/cjs/browser.js?");

/***/ }),

/***/ "./src/backend/BackendGame.js":
/*!************************************!*\
  !*** ./src/backend/BackendGame.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BackendGame\": () => (/* binding */ BackendGame)\n/* harmony export */ });\n/* harmony import */ var _game_Game_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../game/Game.js */ \"./src/game/Game.js\");\n/* harmony import */ var _game_Undo_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../game/Undo.js */ \"./src/game/Undo.js\");\n/* harmony import */ var _game_Replay_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../game/Replay.js */ \"./src/game/Replay.js\");\n/* harmony import */ var _game_Commands_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../game/Commands.js */ \"./src/game/Commands.js\");\n/*Copyright (C) 2021-2022 The Xanado Project https://github.com/cdot/Xanado\n  License MIT. See README.md at the root of this distribution for full copyright\n  and license information. Author Crawford Currie http://c-dot.co.uk*/\n\n\n\n\n\n\n/**\n * Back end implementation of {@linkcode Game}.\n * Combines all the game components into a playable game.\n * @mixes game/Undo\n * @mixes game/Replay\n * @mixes game/Commands\n * @extends Game\n */\nclass BackendGame extends (0,_game_Undo_js__WEBPACK_IMPORTED_MODULE_1__.Undo)((0,_game_Replay_js__WEBPACK_IMPORTED_MODULE_2__.Replay)((0,_game_Commands_js__WEBPACK_IMPORTED_MODULE_3__.Commands)(_game_Game_js__WEBPACK_IMPORTED_MODULE_0__.Game))) {\n\n  /**\n   * Override factory classes from Game\n   */\n  static CLASSES = {\n    Game: BackendGame,\n\n    Board: _game_Game_js__WEBPACK_IMPORTED_MODULE_0__.Game.CLASSES.Board,\n    Square: _game_Game_js__WEBPACK_IMPORTED_MODULE_0__.Game.CLASSES.Square,\n    Tile: _game_Game_js__WEBPACK_IMPORTED_MODULE_0__.Game.CLASSES.Tile,\n    Player: _game_Game_js__WEBPACK_IMPORTED_MODULE_0__.Game.CLASSES.Player,\n    Rack: _game_Game_js__WEBPACK_IMPORTED_MODULE_0__.Game.CLASSES.Rack,\n    LetterBag: _game_Game_js__WEBPACK_IMPORTED_MODULE_0__.Game.CLASSES.LetterBag,\n    Move: _game_Game_js__WEBPACK_IMPORTED_MODULE_0__.Game.CLASSES.Move,\n    Turn: _game_Game_js__WEBPACK_IMPORTED_MODULE_0__.Game.CLASSES.Turn\n  };\n\n  /**\n   * Check if the game has timed out due to inactivity.\n   * Stops game timers and sets the state of the game if it has.\n   * @function\n   * @instance\n   * @memberof server/GameMixin\n   * @return {Promise} resolves to the game when timeout has\n   * been checked\n   */\n  checkAge() {\n    const ageInDays =\n          (Date.now() - this.lastActivity())\n          / 60000 / 60 / 24;\n\n    if (ageInDays <= 14)\n      return Promise.resolve(this); // still active\n\n    /* c8 ignore next 2 */\n    if (this._debug)\n      this._debug(\"Game\", this.key, \"timed out\");\n\n    this.state = _game_Game_js__WEBPACK_IMPORTED_MODULE_0__.Game.TIMED_OUT;\n    return this.save();\n  }\n}\n\n\n\n\n\n//# sourceURL=webpack://@cdot/xanado/./src/backend/BackendGame.js?");

/***/ }),

/***/ "./src/backend/findBestPlayController.js":
/*!***********************************************!*\
  !*** ./src/backend/findBestPlayController.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"findBestPlay\": () => (/* binding */ findBestPlay)\n/* harmony export */ });\n/* harmony import */ var web_worker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web-worker */ \"./node_modules/web-worker/cjs/browser.js\");\n/* harmony import */ var _BackendGame_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BackendGame.js */ \"./src/backend/BackendGame.js\");\n/*Copyright (C) 2019-2022 The Xanado Project https://github.com/cdot/Xanado\n  License MIT. See README.md at the root of this distribution for full copyright\n  and license information. Author Crawford Currie http://c-dot.co.uk*/\n\n/* global Platform */\n\n/* eslint-disable */\n// eslint (or more likely the import plugin) complains:\n// \"No default export found in imported module \"web-worker\"\"\n// but it works fine.\n\n/* eslint-enable */\n\n\n\n/** @module */\n\n/**\n * This is the controller side of a best play thread.\n * Interface is the same as for {@linkcode findBestPlay} so they\n * can be switched in and out.\n */\nfunction findBestPlay(\n  game, letters, listener, dictionary) {\n\n  return new Promise((resolve, reject) => {\n    const worker = new web_worker__WEBPACK_IMPORTED_MODULE_0__(\n      new URL(/* worker import */ __webpack_require__.p + __webpack_require__.u(\"src_backend_findBestPlayWorker_js\"), __webpack_require__.b),\n      { type: undefined });\n\n    // Apply the game time limit\n    let timer;\n    if (game.timerType === _BackendGame_js__WEBPACK_IMPORTED_MODULE_1__.BackendGame.Timer.TURN) {\n      timer = setTimeout(() => {\n        console.error(\"findBestPlay timed out\");\n        worker.terminate();\n      }, game.timeAllowed * 60000);\n    }\n\n    // Pass worker messages on to listener\n    worker.addEventListener(\"message\", data => {\n      const mess = _BackendGame_js__WEBPACK_IMPORTED_MODULE_1__.BackendGame.fromCBOR(data.data, _BackendGame_js__WEBPACK_IMPORTED_MODULE_1__.BackendGame.CLASSES);\n      switch (mess.type) {\n      case \"play\":\n        listener(mess.data);\n        break;\n      case \"exit\":\n        if (timer)\n          clearTimeout(timer);\n        resolve();\n        break;\n      }\n    });\n\n    /* c8 ignore start */\n    worker.addEventListener(\"error\", e => {\n      console.error(\"Worker:\", e.message, e.filename, e.lineno);\n      if (timer)\n        clearTimeout(timer);\n      reject();\n    });\n    /* c8 ignore stop */\n\n    worker.postMessage(_BackendGame_js__WEBPACK_IMPORTED_MODULE_1__.BackendGame.toCBOR({\n      Platform: Platform.name,\n      game: game,\n      rack: letters,\n      dictionary: dictionary\n    }));\n  });\n}\n\n\n\n\n\n//# sourceURL=webpack://@cdot/xanado/./src/backend/findBestPlayController.js?");

/***/ }),

/***/ "./src/game/Replay.js":
/*!****************************!*\
  !*** ./src/game/Replay.js ***!
  \****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Replay\": () => (/* binding */ Replay)\n/* harmony export */ });\n/* harmony import */ var _Game_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Game.js */ \"./src/game/Game.js\");\n/*Copyright (C) 2022 The Xanado Project https://github.com/cdot/Xanado\n  License MIT. See README.md at the root of this distribution for full copyright\n  and license information. Author Crawford Currie http://c-dot.co.uk*/\n\n\nconst LetterBag = _Game_js__WEBPACK_IMPORTED_MODULE_0__.Game.CLASSES.LetterBag;\nconst Board = _Game_js__WEBPACK_IMPORTED_MODULE_0__.Game.CLASSES.Board;\nconst Player = _Game_js__WEBPACK_IMPORTED_MODULE_0__.Game.CLASSES.Player;\nconst Tile = _Game_js__WEBPACK_IMPORTED_MODULE_0__.Game.CLASSES.Tile;\nconst Rack = _Game_js__WEBPACK_IMPORTED_MODULE_0__.Game.CLASSES.Rack;\nconst Turn = _Game_js__WEBPACK_IMPORTED_MODULE_0__.Game.CLASSES.Turn;\n\n/**\n * Extend Game to support replay of another game. Requires\n * {@linkcode game/Undo} and {@linkcode game/Commands}\n * to be mixed in.\n * @mixin game/Replay\n */\nconst Replay = superclass => class extends superclass {\n\n  /*\n   * Replay the turns in another game, to arrive at the same state.\n   * The letter bag, players, and some other conditions\n   * are copied from the other game, and each turn is undone\n   * back to the game's initial state. Then each turn is replayed.\n   * all players are played as human players - there is no move\n   * computation done.\n   * Usage\n   * ```\n   * let simulation = new Game(gameToPlay).replay(gameToPlay)\n   * for (let i = 0; i < gameToPlay.turns.length)\n   *    simulation.step();\n   * ```\n   * @param {Game} playedGame the game containing turns and players\n   * to simulate.\n   * @instance\n   * @memberof game/!Replay\n   */\n  replay(playedGame) {\n    this.game = playedGame;\n    this.allowUndo = true;\n    // Reset to the first turn\n    this.nextTurn = 0;\n    // Override the bag and board (this is what create() would do)\n    this.letterBag = new LetterBag(this.game.letterBag);\n    this.board = new Board(_Game_js__WEBPACK_IMPORTED_MODULE_0__.Game.CLASSES, this.game.board);\n    this.bonuses = this.game.bonuses;\n    this.rackSize = this.game.rackSize;\n    this.swapSize = this.game.swapSize;\n    this.state = _Game_js__WEBPACK_IMPORTED_MODULE_0__.Game.State.PLAYING;\n    this.whosTurnKey = this.game.turns[0].playerKey;\n\n    // Copy players and their racks.\n    for (const p of this.game.players) {\n      const np = new Player(p, _Game_js__WEBPACK_IMPORTED_MODULE_0__.Game.CLASSES);\n      np.isRobot = false;\n      np.rack = new Rack(_Game_js__WEBPACK_IMPORTED_MODULE_0__.Game.CLASSES, p.rack);\n      np.passes = p.passes;\n      np.score = p.score;\n      this.addPlayer(np);\n      /* c8 ignore next 2 */\n      if (this._debug)\n        this._debug(\"\\tlast rack for\", np.key, \"was\", np.rack.stringify());\n    }\n\n    // Copy the board\n    this.game.board.forEachTiledSquare(\n      (square, c, r) => {\n        this.board.at(c, r).tile = new Tile(square.tile);\n        return false;\n      });\n\n    // Remember the initial bag tiles\n    //const preUndoBag = new LetterBag(this.game.letterBag).tiles;\n\n    // To get back to the initial game state we have to run through\n    // the turn history backwards to reconstruct initial racks.\n    // Could use Undo to do this, but it's overkill as we don't need\n    // (or want) to modify the board\n    const turns = this.game.turns;\n    /* c8 ignore next 2 */\n    if (this._debug)\n      this._debug(\"unwrap\", turns.length, \"turns\");\n    for (let i = this.game.turns.length - 1; i >= 0; i--) {\n      const turn = this.game.turns[i];\n      this.undo(turn, true);\n      /*const tiles = this.letterBag.letters();\n        this._debug(\n        `Bag  \"${this.letterBag.letters().sort().join(\"\")}\"`);\n        const ts =\n        this.board.tiles().map(bt => bt.isBlank ? \" \" : bt.letter);\n        this._debug(`Board\"${ts.sort().join(\"\")}\"`);\n        tiles.push(ts);\n        for (const p of this.players) {\n        tiles.push(p.rack.letters());\n        this._debug(`Rack \"${p.rack.letters().sort().join(\"\")}\"`);\n        }\n        this._debug(`All  \"${tiles.flat().sort().join(\"\")}\"`);*/\n    }\n\n    for (const pl of this.players) {\n      pl.missNextTurn = false;\n      /* c8 ignore next 2 */\n      if (this._debug)\n        this._debug(\"Start player\", pl.stringify());\n    }\n    /* c8 ignore next 2 */\n    if (this._debug) {\n      this._debug(\"Start bag\", this.letterBag.stringify());\n      this._debug(\"--------------------------------\");\n    }\n\n    return this;\n  }\n\n  /**\n   * Promise to perform a single step in the simulation\n   * @instance\n   * @memberof game/Replay\n   * @return {Promise} promise that resolves to the simulated turn when\n   * the simulation step has been run\n   */\n  step() {\n    // Copy the turn to avoid accidental overwrite\n    const turn = new Turn(this.game.turns[this.nextTurn++]);\n    turn.gameKey = this.key;\n    return this.redo(turn) // redo comes from Undo.js\n    .then(() => {\n      /* c8 ignore next 5 */\n      if (this._debug) {\n        for (const pl of this.players)\n          this._debug(pl.stringify());\n        this._debug(\"---------------------\");\n      }\n      return turn;\n    });\n  }\n};\n\n\n\n\n//# sourceURL=webpack://@cdot/xanado/./src/game/Replay.js?");

/***/ })

}]);