/* eslint-env node */

/**
 * Command-line program to explore the words encoded in a DAWG generated by DAWG_Compare.c
 */
const requirejs = require('requirejs');

requirejs.config({
    nodeRequire: require,
	paths: {
		scrabble: "js/scrabble",
	}
});

requirejs(["node-getopt", "fs-extra", "scrabble/Dictionary"], (Getopt, Fs, Dictionary) => {
	let opt = Getopt.create([
        ["h", "help", "Show this help"],
		["l", "list", "Dump a complete list of the words in the DAWG"],
		["d", "dawg=ARG", "Use the DAWG from the given file (default Dawg_For_Lexicon.dat)"],
		["a", "anagrams", "Find anagrams of the words"]
	])
        .bindHelp()
        .setHelp("Check a word is in the dictionary\n[[OPTIONS]]")
		.parseSystem();

	let dawgfile = opt.options.dawg || "Dawg_For_Lexicon.dat";
	console.log(`Loading DAWG from ${dawgfile}`);
	Fs.readFile(dawgfile)
	.then(dawg => {
		let dict = new Dictionary(dawg, 15, "ABCDEFGHIJKLMNOPQRSTUVWXYZ");
		if (opt.options.list) {
			let list = [];
			dict.walk((word) => list.push(word));
			console.log(list.join(", "));
		}
		for (let word of opt.argv) {
			let ok = dict.checkWord(word);
			console.log(`"${word}" is ${ok ? "" : 'not '}in the dictionary`);
			if (opt.options.anagrams) {
				console.log(`\nAnagrams of "${word}"`);
				let anag = dict.findAnagrams(word);
				console.log(anag.join(", "));
			}
		}
	});
});
