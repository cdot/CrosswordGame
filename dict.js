/* eslint-env node */

/**
 * Command-line program to explore the words encoded in a DAWG generated by DAWG_Compare.c
 */
const requirejs = require('requirejs');

requirejs.config({
    nodeRequire: require,
	paths: {
		game: "js/game",
	}
});

const DESCRIPTION = "USAGE\n  node dict.js [options] <dictionary> <words>\n"
+ "Explore a DAWG dictionary."

APP_DIR = __dirname;

requirejs(["node-getopt", "fs-extra", "node-gzip", "game/Dictionary"], (Getopt, Fs, Gzip, Dictionary) => {
	let opt = Getopt.create([
        ["h", "help", "Show this help"],
		["l", "list", "Dump a complete list of the words in the DAWG"],
		["a", "anagrams", "Find anagrams of the words"]
	])
        .bindHelp()
        .setHelp(`${DESCRIPTION}\nOPTIONS\n[[OPTIONS]]`)
		.parseSystem();

	let dawgfile;
    if (opt.argv.length == 0) {
        opt.showHelp();
        throw "No DAWG filename given";
    } else {
		dawgfile = opt.argv.shift();
	}

	
	console.log(`Loading DAWG from ${dawgfile}`);
	Dictionary.load(dawgfile)
	.then(dict => {
		if (opt.options.list) {
			let list = [];
			dict.walk(w => list.push(w));
			console.log(list.join("\n"));
		}
		for (let word of opt.argv) {
			let ok = dict.hasWord(word.toUpperCase());
			console.log(`"${word}" is ${ok ? "" : 'not '}in the dictionary`);
			if (opt.options.anagrams) {
				console.log(`\nAnagrams of "${word}"`);
				let anag = dict.findAnagrams(wa);
				console.log(anag);
				let words = anag.map(a => a.map(i => alphabet.charAt(i)).join(""));
				console.log(words.join(", "));
			}
		}
	});
});
